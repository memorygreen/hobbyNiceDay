<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ClassDAO"><!-- egovframework.com.classes.service.impl.ClassDAO -->
	
	
 
	<!-- 클래스 등록 -->
	<insert id="insertClass" parameterType="egovframework.com.cmm.ClassVO" useGeneratedKeys="true" keyProperty="classId">
    INSERT INTO TB_CLASS (
					          CLASS_NM
					        , CLASS_DSCRPTN
					        , LOCATION
					        , CLASS_CATE_BIG
					        , CLASS_CATE_SMALL
					        , CLASS_AGE_MIN
					        , CLASS_PRICE
					        , CLASS_MAX_CNT
					        , START_DT
					        , END_DT
					        , REG_IP
					        , REG_ID
					        , REG_DT
					        , UPDT_DT
					        , UPDT_IP
					        , CLASS_POST
					        , IMG_ID
					        , CLASS_TIME_TAKEN
					     )
	    VALUES (
			          #{classNm}
			        , #{classDscrptn}
			        , #{location}
			        , #{classCateBig}
			        , #{classCateSmall}
			        , #{classAgeMin}
			        , #{classPrice}
			        , #{classMaxCnt}
			        , #{startDt}
			        , #{endDt}
			        , #{regIp}
			        , #{regId}
			        , NOW()
			        , #{updtDt}
			        , #{updtIp}
			        , #{classPost}
			        , #{imgId}
			        , #{classTimeTaken}
			    )
	</insert>



	<!-- (임시 ) 휴무일 등록 -->
	<insert id="insertHoliday" parameterType="HolidayVO" useGeneratedKeys="true" keyProperty="holidayId"> <!-- 생성된 PK를 반환 -->
	    INSERT INTO TB_HOLIDAY (
					 	    	  HOLIDAY_DT
						      	, HOLIDAY_DESC
						    	, CLASS_ID
					        	, IS_PUBLIC_HOLIDAY
					        	, REG_IP
					        	, REG_ID
					        	, REG_DT
						     	 )
					    VALUES (
							       #{holidayDt}
							      ,#{holidayDesc}
							      ,#{classId}
							      ,#{isPublicHoliday}
							      ,#{regIp}
							      ,#{regId}
       						      , NOW()
				     			 )
	</insert>
	
	
	<!-- 클래스 생성 시 시간 추가  -->
	<insert id="insertClassDetail" parameterType="ClassVO" useGeneratedKeys="true" keyProperty="classDetailId"> <!-- 생성된 PK를 반환 -->
	    INSERT INTO TB_CLASS_DETAIL (
					 	    	  CLASS_ID
						      	<!-- , MAX_PARTICIPANTS TB_CLASS 에 이미 있음  -->
						    	, AVAILABLE_CURRENT_CNT 
					        	, AVAILABLE_SEATS <!-- 남은좌석수 -->
					        	, AVAILABLE_STATUS
					        	, TIME_START
					        	, TIME_END
					        	, REG_IP
					        	, REG_ID
					        	, REG_DT
						     	 )
					    VALUES (
							       #{classId}
							      <!-- ,#{maxParticipants} -->
							      , 0 <!-- 현재 예약된 인원수 -->
							      ,#{availableSeats} <!-- 남은좌석수 -->
							      ,#{availableStatus}<!-- 예약가능 상태  -->
							      ,#{timeStart}
							      ,#{timeEnd}
							      ,#{classDetailRegIp}
							      ,#{classDetailRegId} <!-- 세션에 담긴 ID 값 -->
							      , NOW()
				     			 )
	</insert>
	
	
	<!-- 관리자 클래스 전체 목록 조회 -->
	<select id="getAdminClassList" resultType="EgovMap">
	    SELECT *
	    FROM TB_CLASS
	</select>
	
	
	<!-- 메인화면 클래스 전체 목록 조회 -->
	<select id="getMainClassList" resultType="EgovMap">
	    <!-- SELECT *
	    FROM TB_CLASS
	    WHERE CLASS_POST = "Y"-->
	    
	    select c.*
			  ,i.IMG_NM 
			  ,i.IMG_REP 
			  ,i.IMG_TYPE 
			  ,i.IMG_URL
		from  TB_CLASS c
		LEFT JOIN tb_img i
		ON c.img_id = i.img_id
		where c.END_DT >= now()
		and c.CLASS_POST = 'Y'; 

	</select>
	
	<!-- 클래스 상세보기 화면 조회 -->
	<select id="getClassDetails" parameterType="ImgVO" resultType="ClassVO">
    	<!-- SELECT * 
    	FROM TB_CLASS 
    	WHERE CLASS_ID = #{classId} -->
    	
    	SELECT 
		    c.CLASS_ID,
		    c.CLASS_NM,
		    c.CLASS_DSCRPTN,
		    c.LOCATION,
		    c.CLASS_CATE_BIG,
		    c.CLASS_CATE_SMALL,
		    c.CLASS_AGE_MIN,
		    c.CLASS_PRICE,
		    c.CLASS_MAX_CNT,
		    c.CLASS_POST,
		    c.CLASS_TIME_TAKEN,
   		    i.img_id,
		    i.img_nm,
	        DATE_FORMAT(c.START_DT, '%Y-%m-%d') as START_DT,
    		DATE_FORMAT(c.END_DT , '%Y-%m-%d') as END_DT,
		    c.REG_DT AS CLASS_REG_DT,
		    c.UPDT_DT AS CLASS_UPDT_DT,
		    GROUP_CONCAT(DISTINCT CONCAT(hd.HOLIDAY_DT, '(', hd.HOLIDAY_DESC, ')') ORDER BY hd.HOLIDAY_DT SEPARATOR ', ') AS HOLIDAY_INFO,
		    <!--GROUP_CONCAT(DISTINCT CONCAT(DATE_FORMAT(cd.TIME_START, '%H:%i'), '-', DATE_FORMAT(cd.TIME_END, '%H:%i')) ORDER BY cd.TIME_START SEPARATOR ', ') AS TIME_SETS  -->
	        GROUP_CONCAT(DISTINCT CONCAT(cd.class_detail_id, '; ', DATE_FORMAT(cd.TIME_START, '%H:%i'), '-', DATE_FORMAT(cd.TIME_END, '%H:%i')) ORDER BY cd.TIME_START SEPARATOR ', ') AS TIME_SETS
		FROM 
		    TB_CLASS c
		LEFT JOIN 
		    TB_HOLIDAY hd 
		    ON c.CLASS_ID = hd.CLASS_ID
		LEFT JOIN 
		    TB_CLASS_DETAIL cd
		    ON c.CLASS_ID = cd.CLASS_ID
		LEFT JOIN 
		    TB_IMG i 
		    ON c.CLASS_ID = hd.CLASS_ID
		WHERE
		    c.CLASS_ID = #{classId} <!-- 클래스아이디 -->
		GROUP BY c.CLASS_ID;
	</select>
	
	
	
	<!-- 이미지 등록 1개 테스트 -->
	<insert id="saveItem" parameterType="ImgVO" useGeneratedKeys="true" keyProperty="imgId">
	
    INSERT INTO TB_IMG (
					        IMG_NM
					        ,IMG_URL
					        ,IMG_TYPE
					        ,IMG_REP
					        ,REG_IP
					        ,REG_ID
					        ,REG_DT
					     )
	    VALUES (
		          #{imgNm}
		         ,#{imgUrl}
		         ,#{imgType}
		         ,#{imgRep}
		         ,#{regIp}
		         ,#{regId}
			     , NOW()
			    )
	</insert>
	
	<!-- 이미지 조회 테스트 -->
	<select id="getImagesByClassId" parameterType="int" resultType="ImgVO">
	    SELECT * FROM TB_IMG 
	    WHERE IMG_ID = #{imgId}
	</select>
	
	
	
	<!-- 클래스 삭제 관련 -->
	<!-- 클래스 세부 정보 삭제 -->
    <delete id="deleteClassDetailByClassId" parameterType="int">
        DELETE FROM tb_class_detail WHERE class_id = #{classId}
    </delete>

    <!-- 클래스에 연결된 img_id 조회 -->
    <select id="findImgIdByClassId" parameterType="int" resultType="int">
        SELECT img_id FROM tb_class WHERE class_id = #{classId}
    </select>

    <!-- 이미지 삭제 -->
    <delete id="deleteImageById" parameterType="int">
        DELETE FROM tb_img WHERE img_id = #{imgId}
    </delete>

    <!-- 휴일 정보 삭제 -->
    <delete id="deleteHolidayByClassId" parameterType="int">
        DELETE FROM tb_holiday WHERE class_id = #{classId}
    </delete>

    <!-- 클래스 삭제 -->
    <delete id="deleteClassById" parameterType="int">
        DELETE FROM tb_class WHERE class_id = #{classId}
    </delete>
    <!-- 클래스 삭제 관련 끝 -->
	
</mapper>